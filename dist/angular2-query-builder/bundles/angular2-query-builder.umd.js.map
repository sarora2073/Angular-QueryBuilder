{"version":3,"file":"angular2-query-builder.umd.js","sources":["ng://angular2-query-builder/lib/query-builder/query-operator.directive.ts","ng://angular2-query-builder/lib/query-builder/query-field.directive.ts","ng://angular2-query-builder/lib/query-builder/query-entity.directive.ts","ng://angular2-query-builder/lib/query-builder/query-switch-group.directive.ts","ng://angular2-query-builder/lib/query-builder/query-button-group.directive.ts","ng://angular2-query-builder/lib/query-builder/query-input.directive.ts","ng://angular2-query-builder/lib/query-builder/query-remove-button.directive.ts","ng://angular2-query-builder/lib/query-builder/query-empty-warning.directive.ts","ng://angular2-query-builder/lib/query-builder/query-arrow-icon.directive.ts","ng://angular2-query-builder/lib/query-builder/query-builder.component.html","ng://angular2-query-builder/lib/query-builder/query-builder.component.ts","ng://angular2-query-builder/lib/angular2-query-builder.module.ts"],"sourcesContent":["import { Directive, TemplateRef } from '@angular/core';\r\n\r\n@Directive({selector: '[queryOperator]'})\r\nexport class QueryOperatorDirective {\r\n  constructor(public template: TemplateRef<any>) {}\r\n}\r\n","import { Directive, TemplateRef } from '@angular/core';\r\n\r\n@Directive({selector: '[queryField]'})\r\nexport class QueryFieldDirective {\r\n  constructor(public template: TemplateRef<any>) {}\r\n}\r\n","import { Directive, TemplateRef } from '@angular/core';\r\n\r\n@Directive({selector: '[queryEntity]'})\r\nexport class QueryEntityDirective {\r\n  constructor(public template: TemplateRef<any>) {}\r\n}\r\n","import { Directive, TemplateRef } from '@angular/core';\r\n\r\n@Directive({selector: '[querySwitchGroup]'})\r\nexport class QuerySwitchGroupDirective {\r\n  constructor(public template: TemplateRef<any>) {}\r\n}\r\n","import { Directive, TemplateRef } from '@angular/core';\r\n\r\n@Directive({selector: '[queryButtonGroup]'})\r\nexport class QueryButtonGroupDirective {\r\n  constructor(public template: TemplateRef<any>) {}\r\n}\r\n","import { Directive, Input, TemplateRef } from '@angular/core';\r\n\r\n@Directive({selector: '[queryInput]'})\r\nexport class QueryInputDirective {\r\n  /** Unique name for query input type. */\r\n  @Input()\r\n  get queryInputType(): string { return this._type; }\r\n  set queryInputType(value: string) {\r\n    // If the directive is set without a type (updated programatically), then this setter will\r\n    // trigger with an empty string and should not overwrite the programatically set value.\r\n    if (!value) { return; }\r\n    this._type = value;\r\n  }\r\n  private _type: string;\r\n\r\n  constructor(public template: TemplateRef<any>) {}\r\n}\r\n","import { Directive, TemplateRef } from '@angular/core';\r\n\r\n@Directive({selector: '[queryRemoveButton]'})\r\nexport class QueryRemoveButtonDirective {\r\n  constructor(public template: TemplateRef<any>) {}\r\n}\r\n","import { Directive, TemplateRef } from '@angular/core';\r\n\r\n@Directive({selector: '[queryEmptyWarning]'})\r\nexport class QueryEmptyWarningDirective {\r\n  constructor(public template: TemplateRef<any>) {}\r\n}\r\n","import { Directive, TemplateRef } from '@angular/core';\r\n\r\n@Directive({selector: '[queryArrowIcon]'})\r\nexport class QueryArrowIconDirective {\r\n  constructor(public template: TemplateRef<any>) {}\r\n}\r\n","<div [ngClass]=\"getClassNames('switchRow')\">\r\n  <ng-template #defaultArrowIcon>\r\n    <i [ngClass]=\"getClassNames('arrowIcon')\"></i>\r\n  </ng-template>\r\n\r\n  <a *ngIf=\"allowCollapse\" (click)=\"toggleCollapse()\" [ngClass]=\"getClassNames('arrowIconButton', data.collapsed ? 'collapsed' : null)\">\r\n    <ng-container *ngIf=\"getArrowIconTemplate() as template; else defaultArrowIcon\">\r\n      <ng-container *ngTemplateOutlet=\"template; context: getArrowIconContext()\"></ng-container>\r\n    </ng-container>\r\n  </a>\r\n\r\n  <ng-container *ngIf=\"getButtonGroupTemplate() as template; else defaultButtonGroup\">\r\n    <div [ngClass]=\"getClassNames('buttonGroup', 'rightAlign')\">\r\n      <ng-container *ngTemplateOutlet=\"template; context: getButtonGroupContext()\"></ng-container>\r\n    </div>\r\n  </ng-container>\r\n\r\n  <ng-template #defaultButtonGroup>\r\n    <div [ngClass]=\"getClassNames('buttonGroup', 'rightAlign')\">\r\n      <button type=\"button\" (click)=\"addRule()\" [ngClass]=\"getClassNames('button')\" [disabled]=disabled>\r\n        <i [ngClass]=\"getClassNames('addIcon')\"></i> Rule\r\n      </button>\r\n      <button type=\"button\" (click)=\"addRuleSet()\" [ngClass]=\"getClassNames('button')\" *ngIf=\"allowRuleset\" [disabled]=disabled>\r\n        <i [ngClass]=\"getClassNames('addIcon')\"></i> Ruleset\r\n      </button>\r\n      <ng-container *ngIf=\"!!parentValue && allowRuleset\">\r\n        <button type=\"button\" (click)=\"removeRuleSet()\" [ngClass]=\"getClassNames('button', 'removeButton')\" [disabled]=disabled>\r\n          <i [ngClass]=\"getClassNames('removeIcon')\"></i>\r\n        </button>\r\n      </ng-container>\r\n    </div>\r\n  </ng-template>\r\n\r\n  <ng-container *ngIf=\"getSwitchGroupTemplate() as template; else defaultSwitchGroup\">\r\n    <ng-container *ngTemplateOutlet=\"template; context: getSwitchGroupContext()\"></ng-container>\r\n  </ng-container>\r\n\r\n  <ng-template #defaultSwitchGroup>\r\n    <div [ngClass]=\"getClassNames('switchGroup', 'transition')\" *ngIf=\"data\">\r\n      <div [ngClass]=\"getClassNames('switchControl')\">\r\n        <input type=\"radio\" [ngClass]=\"getClassNames('switchRadio')\" [(ngModel)]=\"data.condition\" [disabled]=disabled\r\n          value=\"and\" #andOption />\r\n        <label (click)=\"changeCondition(andOption.value)\" [ngClass]=\"getClassNames('switchLabel')\">AND</label>\r\n      </div>\r\n      <div [ngClass]=\"getClassNames('switchControl')\">\r\n        <input type=\"radio\" [ngClass]=\"getClassNames('switchRadio')\" [(ngModel)]=\"data.condition\" [disabled]=disabled\r\n          value=\"or\" #orOption />\r\n        <label (click)=\"changeCondition(orOption.value)\" [ngClass]=\"getClassNames('switchLabel')\">OR</label>\r\n      </div>\r\n    </div>\r\n  </ng-template>\r\n</div>\r\n\r\n<div #treeContainer (transitionend)=\"transitionEnd($event)\" [ngClass]=\"getClassNames('treeContainer', data.collapsed ? 'collapsed' : null)\">\r\n  <ul [ngClass]=\"getClassNames('tree')\" *ngIf=\"data && data.rules\">\r\n    <ng-container *ngFor=\"let rule of data.rules;let i=index\">\r\n\r\n      <ng-container *ngIf=\"{ruleset: !!rule.rules, invalid: !config.allowEmptyRulesets && rule.rules && rule.rules.length === 0} as local\">\r\n        <li [ngClass]=\"getQueryItemClassName(local)\">\r\n          <ng-container *ngIf=\"!local.ruleset\">\r\n\r\n            <ng-container *ngIf=\"getRemoveButtonTemplate() as template; else defaultRemoveButton\">\r\n              <div [ngClass]=\"getClassNames('buttonGroup', 'rightAlign')\">\r\n                <ng-container *ngTemplateOutlet=\"template; context: getRemoveButtonContext(rule)\"></ng-container>\r\n              </div>\r\n            </ng-container>\r\n\r\n            <ng-template #defaultRemoveButton>\r\n              <div [ngClass]=\"getClassNames('removeButtonSize', 'rightAlign')\">\r\n                <button type=\"button\" [ngClass]=\"getClassNames('button', 'removeButton')\" (click)=\"removeRule(rule, data)\" [disabled]=disabled>\r\n                  <i [ngClass]=\"getClassNames('removeIcon')\"></i>\r\n                </button>\r\n              </div>\r\n            </ng-template>\r\n\r\n            <div *ngIf=\"entities?.length > 0\" class=\"q-inline-block-display\">\r\n              <ng-container *ngIf=\"getEntityTemplate() as template; else defaultEntity\">\r\n                <ng-container *ngTemplateOutlet=\"template; context: getEntityContext(rule)\"></ng-container>\r\n              </ng-container>\r\n            </div>\r\n\r\n            <ng-template #defaultEntity>\r\n              <div [ngClass]=\"getClassNames('entityControlSize')\">\r\n                <select [ngClass]=\"getClassNames('entityControl')\" [(ngModel)]=\"rule.entity\" (ngModelChange)=\"changeEntity($event, rule,i,data)\"\r\n                  [disabled]=\"disabled\">\r\n                  <option *ngFor=\"let entity of entities\" [ngValue]=\"entity.value\">\r\n                    {{entity.name}}\r\n                  </option>\r\n                </select>\r\n              </div>\r\n            </ng-template>\r\n\r\n            <ng-container *ngIf=\"getFieldTemplate() as template; else defaultField\">\r\n              <ng-container *ngTemplateOutlet=\"template; context: getFieldContext(rule)\"></ng-container>\r\n            </ng-container>\r\n\r\n            <ng-template #defaultField>\r\n              <div [ngClass]=\"getClassNames('fieldControlSize')\">\r\n                <select [ngClass]=\"getClassNames('fieldControl')\" [(ngModel)]=\"rule.field\" (ngModelChange)=\"changeField($event, rule)\"\r\n                  [disabled]=\"disabled\">\r\n                  <option *ngFor=\"let field of getFields(rule.entity)\" [ngValue]=\"field.value\">\r\n                    {{field.name}}\r\n                  </option>\r\n                </select>\r\n              </div>\r\n            </ng-template>\r\n\r\n            <ng-container *ngIf=\"getOperatorTemplate() as template; else defaultOperator\">\r\n              <ng-container *ngTemplateOutlet=\"template; context: getOperatorContext(rule)\"></ng-container>\r\n            </ng-container>\r\n\r\n            <ng-template #defaultOperator>\r\n              <div [ngClass]=\"getClassNames('operatorControlSize')\">\r\n                <select [ngClass]=\"getClassNames('operatorControl')\" [(ngModel)]=\"rule.operator\" (ngModelChange)=\"changeOperator(rule)\"\r\n                  [disabled]=\"disabled\">\r\n                  <option *ngFor=\"let operator of getOperators(rule.field)\" [ngValue]=\"operator\">\r\n                    {{operator}}\r\n                  </option>\r\n                </select>\r\n              </div>\r\n            </ng-template>\r\n\r\n            <ng-container *ngIf=\"findTemplateForRule(rule) as template; else defaultInput\">\r\n              <ng-container *ngTemplateOutlet=\"template; context: getInputContext(rule)\"></ng-container>\r\n            </ng-container>\r\n\r\n            <ng-template #defaultInput>\r\n              <div [ngClass]=\"getClassNames('inputControlSize')\" [ngSwitch]=\"getInputType(rule.field, rule.operator)\">\r\n                <input [ngClass]=\"getClassNames('inputControl')\" [(ngModel)]=\"rule.value\" (ngModelChange)=\"changeInput()\"\r\n                  [disabled]=\"disabled\" *ngSwitchCase=\"'string'\" type=\"text\">\r\n                <input [ngClass]=\"getClassNames('inputControl')\" [(ngModel)]=\"rule.value\" (ngModelChange)=\"changeInput()\"\r\n                  [disabled]=\"disabled\" *ngSwitchCase=\"'number'\" type=\"number\">\r\n                <input [ngClass]=\"getClassNames('inputControl')\" [(ngModel)]=\"rule.value\" (ngModelChange)=\"changeInput()\"\r\n                  [disabled]=\"disabled\" *ngSwitchCase=\"'date'\" type=\"date\">\r\n                <input [ngClass]=\"getClassNames('inputControl')\" [(ngModel)]=\"rule.value\" (ngModelChange)=\"changeInput()\"\r\n                  [disabled]=\"disabled\" *ngSwitchCase=\"'time'\" type=\"time\">\r\n                <select [ngClass]=\"getClassNames('inputControl')\" [(ngModel)]=\"rule.value\" (ngModelChange)=\"changeInput()\"\r\n                  [disabled]=\"disabled\" *ngSwitchCase=\"'category'\">\r\n                  <option *ngFor=\"let opt of getOptions(rule.field)\" [ngValue]=\"opt.value\">\r\n                    {{opt.name}}\r\n                  </option>\r\n                </select>\r\n                <ng-container *ngSwitchCase=\"'multiselect'\">\r\n                  <select [ngClass]=\"getClassNames('inputControl')\" [(ngModel)]=\"rule.value\" (ngModelChange)=\"changeInput()\"\r\n                    [disabled]=\"disabled\" multiple>\r\n                    <option *ngFor=\"let opt of getOptions(rule.field)\" [ngValue]=\"opt.value\">\r\n                      {{opt.name}}\r\n                    </option>\r\n                  </select>\r\n                </ng-container>\r\n                <input [ngClass]=\"getClassNames('inputControl')\" [(ngModel)]=\"rule.value\" (ngModelChange)=\"changeInput()\"\r\n                  [disabled]=\"disabled\" *ngSwitchCase=\"'boolean'\" type=\"checkbox\">\r\n              </div>\r\n            </ng-template>\r\n\r\n          </ng-container>\r\n          <query-builder *ngIf=\"local.ruleset\" [data]=\"rule\" [disabled]=\"disabled\" [parentTouchedCallback]=\"parentTouchedCallback || onTouchedCallback\"\r\n            [parentChangeCallback]=\"parentChangeCallback || onChangeCallback\" [parentInputTemplates]=\"parentInputTemplates || inputTemplates\"\r\n            [parentOperatorTemplate]=\"parentOperatorTemplate || operatorTemplate\" [parentFieldTemplate]=\"parentFieldTemplate || fieldTemplate\"\r\n            [parentEntityTemplate]=\"parentEntityTemplate || entityTemplate\" [parentSwitchGroupTemplate]=\"parentSwitchGroupTemplate || switchGroupTemplate\"\r\n            [parentButtonGroupTemplate]=\"parentButtonGroupTemplate || buttonGroupTemplate\" [parentRemoveButtonTemplate]=\"parentRemoveButtonTemplate || removeButtonTemplate\"\r\n            [parentEmptyWarningTemplate]=\"parentEmptyWarningTemplate || emptyWarningTemplate\" [parentArrowIconTemplate]=\"parentArrowIconTemplate || arrowIconTemplate\"\r\n            [parentValue]=\"data\" [classNames]=\"classNames\" [config]=\"config\" [allowRuleset]=\"allowRuleset\"\r\n            [allowCollapse]=\"allowCollapse\" [emptyMessage]=\"emptyMessage\" [operatorMap]=\"operatorMap\">\r\n          </query-builder>\r\n\r\n          <ng-container *ngIf=\"getEmptyWarningTemplate() as template; else defaultEmptyWarning\">\r\n            <ng-container *ngIf=\"local.invalid\">\r\n              <ng-container *ngTemplateOutlet=\"template; context: getEmptyWarningContext()\"></ng-container>\r\n            </ng-container>\r\n          </ng-container>\r\n\r\n          <ng-template #defaultEmptyWarning>\r\n            <p [ngClass]=\"getClassNames('emptyWarning')\" *ngIf=\"local.invalid\">\r\n              {{emptyMessage}}\r\n            </p>\r\n          </ng-template>\r\n        </li>\r\n      </ng-container>\r\n    </ng-container>\r\n  </ul>\r\n</div>","import {\r\n  AbstractControl,\r\n  ControlValueAccessor,\r\n  NG_VALUE_ACCESSOR,\r\n  NG_VALIDATORS,\r\n  ValidationErrors,\r\n  Validator\r\n} from '@angular/forms';\r\nimport { QueryOperatorDirective } from './query-operator.directive';\r\nimport { QueryFieldDirective } from './query-field.directive';\r\nimport { QueryEntityDirective } from './query-entity.directive';\r\nimport { QuerySwitchGroupDirective } from './query-switch-group.directive';\r\nimport { QueryButtonGroupDirective } from './query-button-group.directive';\r\nimport { QueryInputDirective } from './query-input.directive';\r\nimport { QueryRemoveButtonDirective } from './query-remove-button.directive';\r\nimport { QueryEmptyWarningDirective } from './query-empty-warning.directive';\r\nimport { QueryArrowIconDirective } from './query-arrow-icon.directive';\r\nimport {\r\n  ButtonGroupContext,\r\n  Entity,\r\n  Field,\r\n  SwitchGroupContext,\r\n  EntityContext,\r\n  FieldContext,\r\n  InputContext,\r\n  LocalRuleMeta,\r\n  OperatorContext,\r\n  Option,\r\n  QueryBuilderClassNames,\r\n  QueryBuilderConfig,\r\n  RemoveButtonContext,\r\n  ArrowIconContext,\r\n  Rule,\r\n  RuleSet,\r\n  EmptyWarningContext,\r\n} from './query-builder.interfaces';\r\nimport {\r\n  ChangeDetectorRef,\r\n  Component,\r\n  ContentChild,\r\n  ContentChildren,\r\n  forwardRef,\r\n  Input,\r\n  OnChanges,\r\n  OnInit,\r\n  QueryList,\r\n  SimpleChanges,\r\n  TemplateRef,\r\n  ViewChild,\r\n  ElementRef\r\n} from '@angular/core';\r\n\r\nexport const CONTROL_VALUE_ACCESSOR: any = {\r\n  provide: NG_VALUE_ACCESSOR,\r\n  useExisting: forwardRef(() => QueryBuilderComponent),\r\n  multi: true\r\n};\r\n\r\nexport const VALIDATOR: any = {\r\n  provide: NG_VALIDATORS,\r\n  useExisting: forwardRef(() => QueryBuilderComponent),\r\n  multi: true\r\n};\r\n\r\n@Component({\r\n  selector: 'query-builder',\r\n  templateUrl: './query-builder.component.html',\r\n  styleUrls: ['./query-builder.component.scss'],\r\n  providers: [CONTROL_VALUE_ACCESSOR, VALIDATOR]\r\n})\r\nexport class QueryBuilderComponent implements OnInit, OnChanges, ControlValueAccessor, Validator {\r\n  public fields: Field[];\r\n  public filterFields: Field[];\r\n  public entities: Entity[];\r\n  public defaultClassNames: QueryBuilderClassNames = {\r\n    arrowIconButton: 'q-arrow-icon-button',\r\n    arrowIcon: 'q-icon q-arrow-icon',\r\n    removeIcon: 'q-icon q-remove-icon',\r\n    addIcon: 'q-icon q-add-icon',\r\n    button: 'q-button',\r\n    buttonGroup: 'q-button-group',\r\n    removeButton: 'q-remove-button',\r\n    switchGroup: 'q-switch-group',\r\n    switchLabel: 'q-switch-label',\r\n    switchRadio: 'q-switch-radio',\r\n    rightAlign: 'q-right-align',\r\n    transition: 'q-transition',\r\n    collapsed: 'q-collapsed',\r\n    treeContainer: 'q-tree-container',\r\n    tree: 'q-tree',\r\n    row: 'q-row',\r\n    connector: 'q-connector',\r\n    rule: 'q-rule',\r\n    ruleSet: 'q-ruleset',\r\n    invalidRuleSet: 'q-invalid-ruleset',\r\n    emptyWarning: 'q-empty-warning',\r\n    fieldControl: 'q-field-control',\r\n    fieldControlSize: 'q-control-size',\r\n    entityControl: 'q-entity-control',\r\n    entityControlSize: 'q-control-size',\r\n    operatorControl: 'q-operator-control',\r\n    operatorControlSize: 'q-control-size',\r\n    inputControl: 'q-input-control',\r\n    inputControlSize: 'q-control-size'\r\n  };\r\n  public defaultOperatorMap: { [key: string]: string[] } = {\r\n    string: ['=', '!=', 'contains', 'like'],\r\n    number: ['=', '!=', '>', '>=', '<', '<='],\r\n    time: ['=', '!=', '>', '>=', '<', '<='],\r\n    date: ['=', '!=', '>', '>=', '<', '<='],\r\n    category: ['=', '!=', 'in', 'not in'],\r\n    boolean: ['=']\r\n  };\r\n  @Input() disabled: boolean;\r\n  @Input() data: RuleSet = { condition: 'and', rules: [] };\r\n\r\n  // For ControlValueAccessor interface\r\n  public onChangeCallback: () => void;\r\n  public onTouchedCallback: () => any;\r\n\r\n  @Input() allowRuleset: boolean = true;\r\n  @Input() allowCollapse: boolean = false;\r\n  @Input() emptyMessage: string = 'A ruleset cannot be empty. Please add a rule or remove it all together.';\r\n  @Input() classNames: QueryBuilderClassNames;\r\n  @Input() operatorMap: { [key: string]: string[] };\r\n  @Input() parentValue: RuleSet;\r\n  @Input() config: QueryBuilderConfig = { fields: {} };\r\n  @Input() parentArrowIconTemplate: QueryArrowIconDirective;\r\n  @Input() parentInputTemplates: QueryList<QueryInputDirective>;\r\n  @Input() parentOperatorTemplate: QueryOperatorDirective;\r\n  @Input() parentFieldTemplate: QueryFieldDirective;\r\n  @Input() parentEntityTemplate: QueryEntityDirective;\r\n  @Input() parentSwitchGroupTemplate: QuerySwitchGroupDirective;\r\n  @Input() parentButtonGroupTemplate: QueryButtonGroupDirective;\r\n  @Input() parentRemoveButtonTemplate: QueryRemoveButtonDirective;\r\n  @Input() parentEmptyWarningTemplate: QueryEmptyWarningDirective;\r\n  @Input() parentChangeCallback: () => void;\r\n  @Input() parentTouchedCallback: () => void;\r\n  @Input() persistValueOnFieldChange: boolean = false;\r\n\r\n  @ViewChild('treeContainer', {static: true}) treeContainer: ElementRef;\r\n\r\n  @ContentChild(QueryButtonGroupDirective) buttonGroupTemplate: QueryButtonGroupDirective;\r\n  @ContentChild(QuerySwitchGroupDirective) switchGroupTemplate: QuerySwitchGroupDirective;\r\n  @ContentChild(QueryFieldDirective) fieldTemplate: QueryFieldDirective;\r\n  @ContentChild(QueryEntityDirective) entityTemplate: QueryEntityDirective;\r\n  @ContentChild(QueryOperatorDirective) operatorTemplate: QueryOperatorDirective;\r\n  @ContentChild(QueryRemoveButtonDirective) removeButtonTemplate: QueryRemoveButtonDirective;\r\n  @ContentChild(QueryEmptyWarningDirective) emptyWarningTemplate: QueryEmptyWarningDirective;\r\n  @ContentChildren(QueryInputDirective) inputTemplates: QueryList<QueryInputDirective>;\r\n  @ContentChild(QueryArrowIconDirective) arrowIconTemplate: QueryArrowIconDirective;\r\n\r\n  private defaultTemplateTypes: string[] = [\r\n    'string', 'number', 'time', 'date', 'category', 'boolean', 'multiselect'];\r\n  private defaultPersistValueTypes: string[] = [\r\n    'string', 'number', 'time', 'date', 'boolean'];\r\n  private defaultEmptyList: any[] = [];\r\n  private operatorsCache: { [key: string]: string[] };\r\n  private inputContextCache = new Map<Rule, InputContext>();\r\n  private operatorContextCache = new Map<Rule, OperatorContext>();\r\n  private fieldContextCache = new Map<Rule, FieldContext>();\r\n  private entityContextCache = new Map<Rule, EntityContext>();\r\n  private removeButtonContextCache = new Map<Rule, RemoveButtonContext>();\r\n  private buttonGroupContext: ButtonGroupContext;\r\n\r\n  constructor(private changeDetectorRef: ChangeDetectorRef) { }\r\n\r\n  // ----------OnInit Implementation----------\r\n\r\n  ngOnInit() { }\r\n\r\n  // ----------OnChanges Implementation----------\r\n\r\n  ngOnChanges(changes: SimpleChanges) {\r\n    const config = this.config;\r\n    const type = typeof config;\r\n    if (type === 'object') {\r\n      this.fields = Object.keys(config.fields).map((value) => {\r\n        const field = config.fields[value];\r\n        field.value = field.value || value;\r\n        return field;\r\n      });\r\n      if (config.entities) {\r\n        this.entities = Object.keys(config.entities).map((value) => {\r\n          const entity = config.entities[value];\r\n          entity.value = entity.value || value;\r\n          return entity;\r\n        });\r\n      } else {\r\n        this.entities = null;\r\n      }\r\n      this.operatorsCache = {};\r\n    } else {\r\n      throw new Error(`Expected 'config' must be a valid object, got ${type} instead.`);\r\n    }\r\n  }\r\n\r\n  // ----------Validator Implementation----------\r\n\r\n  validate(control: AbstractControl): ValidationErrors | null {\r\n    const errors: { [key: string]: any } = {};\r\n    const ruleErrorStore = [];\r\n    let hasErrors = false;\r\n\r\n    if (!this.config.allowEmptyRulesets && this.checkEmptyRuleInRuleset(this.data)) {\r\n      errors.empty = 'Empty rulesets are not allowed.';\r\n      hasErrors = true;\r\n    }\r\n\r\n    this.validateRulesInRuleset(this.data, ruleErrorStore);\r\n\r\n    if (ruleErrorStore.length) {\r\n      errors.rules = ruleErrorStore;\r\n      hasErrors = true;\r\n    }\r\n    return hasErrors ? errors : null;\r\n  }\r\n\r\n  // ----------ControlValueAccessor Implementation----------\r\n\r\n  @Input()\r\n  get value(): RuleSet {\r\n    return this.data;\r\n  }\r\n  set value(value: RuleSet) {\r\n    // When component is initialized without a formControl, null is passed to value\r\n    this.data = value || { condition: 'and', rules: [] };\r\n    this.handleDataChange();\r\n  }\r\n\r\n  writeValue(obj: any): void {\r\n    this.value = obj;\r\n  }\r\n  registerOnChange(fn: any): void {\r\n    this.onChangeCallback = () => fn(this.data);\r\n  }\r\n  registerOnTouched(fn: any): void {\r\n    this.onTouchedCallback = () => fn(this.data);\r\n  }\r\n  setDisabledState(isDisabled: boolean): void {\r\n    this.disabled = isDisabled;\r\n    this.changeDetectorRef.detectChanges();\r\n  }\r\n\r\n  // ----------END----------\r\n\r\n  getDisabledState = (): boolean => {\r\n    return this.disabled;\r\n  }\r\n\r\n  findTemplateForRule(rule: Rule): TemplateRef<any> {\r\n    const type = this.getInputType(rule.field, rule.operator);\r\n    if (type) {\r\n      const queryInput = this.findQueryInput(type);\r\n      if (queryInput) {\r\n        return queryInput.template;\r\n      } else {\r\n        if (this.defaultTemplateTypes.indexOf(type) === -1) {\r\n          console.warn(`Could not find template for field with type: ${type}`);\r\n        }\r\n        return null;\r\n      }\r\n    }\r\n  }\r\n\r\n  findQueryInput(type: string): QueryInputDirective {\r\n    const templates = this.parentInputTemplates || this.inputTemplates;\r\n    return templates.find((item) => item.queryInputType === type);\r\n  }\r\n\r\n  getOperators(field: string): string[] {\r\n    if (this.operatorsCache[field]) {\r\n      return this.operatorsCache[field];\r\n    }\r\n    let operators = this.defaultEmptyList;\r\n    const fieldObject = this.config.fields[field];\r\n\r\n    if (this.config.getOperators) {\r\n      return this.config.getOperators(field, fieldObject);\r\n    }\r\n\r\n    const type = fieldObject.type;\r\n\r\n    if (fieldObject && fieldObject.operators) {\r\n      operators = fieldObject.operators;\r\n    } else if (type) {\r\n      operators = (this.operatorMap && this.operatorMap[type]) || this.defaultOperatorMap[type] || this.defaultEmptyList;\r\n      if (operators.length === 0) {\r\n        console.warn(\r\n          `No operators found for field '${field}' with type ${fieldObject.type}. ` +\r\n          `Please define an 'operators' property on the field or use the 'operatorMap' binding to fix this.`);\r\n      }\r\n      if (fieldObject.nullable) {\r\n        operators = operators.concat(['is null', 'is not null']);\r\n      }\r\n    } else {\r\n      console.warn(`No 'type' property found on field: '${field}'`);\r\n    }\r\n\r\n    // Cache reference to array object, so it won't be computed next time and trigger a rerender.\r\n    this.operatorsCache[field] = operators;\r\n    return operators;\r\n  }\r\n\r\n  getFields(entity: string): Field[] {\r\n    if (this.entities && entity) {\r\n      return this.fields.filter((field) => {\r\n        return field && field.entity === entity;\r\n      });\r\n    } else {\r\n      return this.fields;\r\n    }\r\n  }\r\n\r\n  getInputType(field: string, operator: string): string {\r\n    if (this.config.getInputType) {\r\n      return this.config.getInputType(field, operator);\r\n    }\r\n\r\n    if (!this.config.fields[field]) {\r\n      throw new Error(`No configuration for field '${field}' could be found! Please add it to config.fields.`);\r\n    }\r\n\r\n    const type = this.config.fields[field].type;\r\n    switch (operator) {\r\n      case 'is null':\r\n      case 'is not null':\r\n        return null;  // No displayed component\r\n      case 'in':\r\n      case 'not in':\r\n        return type === 'category' || type === 'boolean' ? 'multiselect' : type;\r\n      default:\r\n        return type;\r\n    }\r\n  }\r\n\r\n  getOptions(field: string): Option[] {\r\n    if (this.config.getOptions) {\r\n      return this.config.getOptions(field);\r\n    }\r\n    return this.config.fields[field].options || this.defaultEmptyList;\r\n  }\r\n\r\n  getClassNames(...args): string {\r\n    const clsLookup = this.classNames ? this.classNames : this.defaultClassNames;\r\n    const classNames = args.map((id) => clsLookup[id] || this.defaultClassNames[id]).filter((c) => !!c);\r\n    return classNames.length ? classNames.join(' ') : null;\r\n  }\r\n\r\n  getDefaultField(entity: Entity): Field {\r\n    if (!entity) {\r\n      return null;\r\n    } else if (entity.defaultField !== undefined) {\r\n      return this.getDefaultValue(entity.defaultField);\r\n    } else {\r\n      const entityFields = this.fields.filter((field) => {\r\n        return field && field.entity === entity.value;\r\n      });\r\n      if (entityFields && entityFields.length) {\r\n        return entityFields[0];\r\n      } else {\r\n        console.warn(`No fields found for entity '${entity.name}'. ` +\r\n          `A 'defaultOperator' is also not specified on the field config. Operator value will default to null.`);\r\n        return null;\r\n      }\r\n    }\r\n  }\r\n\r\n  getDefaultOperator(field: Field): string {\r\n    if (field && field.defaultOperator !== undefined) {\r\n      return this.getDefaultValue(field.defaultOperator);\r\n    } else {\r\n      const operators = this.getOperators(field.value);\r\n      if (operators && operators.length) {\r\n        return operators[0];\r\n      } else {\r\n        console.warn(`No operators found for field '${field.value}'. ` +\r\n          `A 'defaultOperator' is also not specified on the field config. Operator value will default to null.`);\r\n        return null;\r\n      }\r\n    }\r\n  }\r\n\r\n  addRule(parent?: RuleSet): void {\r\n    if (this.disabled) {\r\n      return;\r\n    }\r\n\r\n    parent = parent || this.data;\r\n    if (this.config.addRule) {\r\n      this.config.addRule(parent);\r\n    } else {\r\n      const field = this.fields[0];\r\n      parent.rules = parent.rules.concat([{\r\n        field: field.value,\r\n        operator: this.getDefaultOperator(field),\r\n        value: this.getDefaultValue(field.defaultValue),\r\n        entity: field.entity\r\n      }]);\r\n    }\r\n\r\n    this.handleTouched();\r\n    this.handleDataChange();\r\n  }\r\n\r\n  removeRule(rule: Rule, parent?: RuleSet): void {\r\n    if (this.disabled) {\r\n      return;\r\n    }\r\n\r\n    parent = parent || this.data;\r\n    if (this.config.removeRule) {\r\n      this.config.removeRule(rule, parent);\r\n    } else {\r\n      parent.rules = parent.rules.filter((r) => r !== rule);\r\n    }\r\n    this.inputContextCache.delete(rule);\r\n    this.operatorContextCache.delete(rule);\r\n    this.fieldContextCache.delete(rule);\r\n    this.entityContextCache.delete(rule);\r\n    this.removeButtonContextCache.delete(rule);\r\n\r\n    this.handleTouched();\r\n    this.handleDataChange();\r\n  }\r\n\r\n  addRuleSet(parent?: RuleSet): void {\r\n    if (this.disabled) {\r\n      return;\r\n    }\r\n\r\n    parent = parent || this.data;\r\n    if (this.config.addRuleSet) {\r\n      this.config.addRuleSet(parent);\r\n    } else {\r\n      parent.rules = parent.rules.concat([{ condition: 'and', rules: [] }]);\r\n    }\r\n\r\n    this.handleTouched();\r\n    this.handleDataChange();\r\n  }\r\n\r\n  removeRuleSet(ruleset?: RuleSet, parent?: RuleSet): void {\r\n    if (this.disabled) {\r\n      return;\r\n    }\r\n\r\n    ruleset = ruleset || this.data;\r\n    parent = parent || this.parentValue;\r\n    if (this.config.removeRuleSet) {\r\n      this.config.removeRuleSet(ruleset, parent);\r\n    } else {\r\n      parent.rules = parent.rules.filter((r) => r !== ruleset);\r\n    }\r\n\r\n    this.handleTouched();\r\n    this.handleDataChange();\r\n  }\r\n\r\n  transitionEnd(e: Event): void {\r\n    this.treeContainer.nativeElement.style.maxHeight = null;\r\n  }\r\n\r\n  toggleCollapse(): void {\r\n    this.computedTreeContainerHeight();\r\n    setTimeout(() => {\r\n      this.data.collapsed = !this.data.collapsed;\r\n    }, 100);\r\n  }\r\n\r\n  computedTreeContainerHeight(): void {\r\n    const nativeElement: HTMLElement = this.treeContainer.nativeElement;\r\n    if (nativeElement && nativeElement.firstElementChild) {\r\n      nativeElement.style.maxHeight = (nativeElement.firstElementChild.clientHeight + 8) + 'px';\r\n    }\r\n  }\r\n\r\n  changeCondition(value: string): void {\r\n    if (this.disabled) {\r\n      return;\r\n    }\r\n\r\n    this.data.condition = value;\r\n    this.handleTouched();\r\n    this.handleDataChange();\r\n  }\r\n\r\n  changeOperator(rule: Rule): void {\r\n    if (this.disabled) {\r\n      return;\r\n    }\r\n\r\n    if (this.config.coerceValueForOperator) {\r\n      rule.value = this.config.coerceValueForOperator(rule.operator, rule.value, rule);\r\n    } else {\r\n      rule.value = this.coerceValueForOperator(rule.operator, rule.value, rule);\r\n    }\r\n\r\n    this.handleTouched();\r\n    this.handleDataChange();\r\n  }\r\n\r\n  coerceValueForOperator(operator: string, value: any, rule: Rule): any {\r\n    const inputType: string = this.getInputType(rule.field, operator);\r\n    if (inputType === 'multiselect' && !Array.isArray(value)) {\r\n      return [value];\r\n    }\r\n    return value;\r\n  }\r\n\r\n  changeInput(): void {\r\n    if (this.disabled) {\r\n      return;\r\n    }\r\n\r\n    this.handleTouched();\r\n    this.handleDataChange();\r\n  }\r\n\r\n  changeField(fieldValue: string, rule: Rule): void {\r\n    if (this.disabled) {\r\n      return;\r\n    }\r\n\r\n    const inputContext = this.inputContextCache.get(rule);\r\n    const currentField = inputContext && inputContext.field;\r\n\r\n    const nextField: Field = this.config.fields[fieldValue];\r\n\r\n    const nextValue = this.calculateFieldChangeValue(\r\n      currentField, nextField, rule.value);\r\n\r\n    if (nextValue !== undefined) {\r\n      rule.value = nextValue;\r\n    } else {\r\n      delete rule.value;\r\n    }\r\n\r\n    rule.operator = this.getDefaultOperator(nextField);\r\n\r\n    // Create new context objects so templates will automatically update\r\n    this.inputContextCache.delete(rule);\r\n    this.operatorContextCache.delete(rule);\r\n    this.fieldContextCache.delete(rule);\r\n    this.entityContextCache.delete(rule);\r\n    this.getInputContext(rule);\r\n    this.getFieldContext(rule);\r\n    this.getOperatorContext(rule);\r\n    this.getEntityContext(rule);\r\n\r\n    this.handleTouched();\r\n    this.handleDataChange();\r\n  }\r\n\r\n  changeEntity(entityValue: string, rule: Rule, index: number, data: RuleSet): void {\r\n    if (this.disabled) {\r\n      return;\r\n    }\r\n    let i = index;\r\n    let rs = data;\r\n    const entity: Entity = this.entities.find((e) => e.value === entityValue);\r\n    const defaultField: Field = this.getDefaultField(entity);\r\n    if (!rs) {\r\n      rs = this.data;\r\n      i = rs.rules.findIndex((x) => x === rule);\r\n    }\r\n    rule.field = defaultField.value;\r\n    rs.rules[i] = rule;\r\n    if (defaultField) {\r\n      this.changeField(defaultField.value, rule);\r\n    } else {\r\n      this.handleTouched();\r\n      this.handleDataChange();\r\n    }\r\n  }\r\n\r\n  getDefaultValue(defaultValue: any): any {\r\n    switch (typeof defaultValue) {\r\n      case 'function':\r\n        return defaultValue();\r\n      default:\r\n        return defaultValue;\r\n    }\r\n  }\r\n\r\n  getOperatorTemplate(): TemplateRef<any> {\r\n    const t = this.parentOperatorTemplate || this.operatorTemplate;\r\n    return t ? t.template : null;\r\n  }\r\n\r\n  getFieldTemplate(): TemplateRef<any> {\r\n    const t = this.parentFieldTemplate || this.fieldTemplate;\r\n    return t ? t.template : null;\r\n  }\r\n\r\n  getEntityTemplate(): TemplateRef<any> {\r\n    const t = this.parentEntityTemplate || this.entityTemplate;\r\n    return t ? t.template : null;\r\n  }\r\n\r\n  getArrowIconTemplate(): TemplateRef<any> {\r\n    const t = this.parentArrowIconTemplate || this.arrowIconTemplate;\r\n    return t ? t.template : null;\r\n  }\r\n\r\n  getButtonGroupTemplate(): TemplateRef<any> {\r\n    const t = this.parentButtonGroupTemplate || this.buttonGroupTemplate;\r\n    return t ? t.template : null;\r\n  }\r\n\r\n  getSwitchGroupTemplate(): TemplateRef<any> {\r\n    const t = this.parentSwitchGroupTemplate || this.switchGroupTemplate;\r\n    return t ? t.template : null;\r\n  }\r\n\r\n  getRemoveButtonTemplate(): TemplateRef<any> {\r\n    const t = this.parentRemoveButtonTemplate || this.removeButtonTemplate;\r\n    return t ? t.template : null;\r\n  }\r\n\r\n  getEmptyWarningTemplate(): TemplateRef<any> {\r\n    const t = this.parentEmptyWarningTemplate || this.emptyWarningTemplate;\r\n    return t ? t.template : null;\r\n  }\r\n\r\n  getQueryItemClassName(local: LocalRuleMeta): string {\r\n    let cls = this.getClassNames('row', 'connector', 'transition');\r\n    cls += ' ' + this.getClassNames(local.ruleset ? 'ruleSet' : 'rule');\r\n    if (local.invalid) {\r\n      cls += ' ' + this.getClassNames('invalidRuleSet');\r\n    }\r\n    return cls;\r\n  }\r\n\r\n  getButtonGroupContext(): ButtonGroupContext {\r\n    if (!this.buttonGroupContext) {\r\n      this.buttonGroupContext = {\r\n        addRule: this.addRule.bind(this),\r\n        addRuleSet: this.allowRuleset && this.addRuleSet.bind(this),\r\n        removeRuleSet: this.allowRuleset && this.parentValue && this.removeRuleSet.bind(this),\r\n        getDisabledState: this.getDisabledState,\r\n        $implicit: this.data\r\n      };\r\n    }\r\n    return this.buttonGroupContext;\r\n  }\r\n\r\n  getRemoveButtonContext(rule: Rule): RemoveButtonContext {\r\n    if (!this.removeButtonContextCache.has(rule)) {\r\n      this.removeButtonContextCache.set(rule, {\r\n        removeRule: this.removeRule.bind(this),\r\n        getDisabledState: this.getDisabledState,\r\n        $implicit: rule\r\n      });\r\n    }\r\n    return this.removeButtonContextCache.get(rule);\r\n  }\r\n\r\n  getFieldContext(rule: Rule): FieldContext {\r\n    if (!this.fieldContextCache.has(rule)) {\r\n      this.fieldContextCache.set(rule, {\r\n        onChange: this.changeField.bind(this),\r\n        getFields: this.getFields.bind(this),\r\n        getDisabledState: this.getDisabledState,\r\n        fields: this.fields,\r\n        $implicit: rule\r\n      });\r\n    }\r\n    return this.fieldContextCache.get(rule);\r\n  }\r\n\r\n  getEntityContext(rule: Rule): EntityContext {\r\n    if (!this.entityContextCache.has(rule)) {\r\n      this.entityContextCache.set(rule, {\r\n        onChange: this.changeEntity.bind(this),\r\n        getDisabledState: this.getDisabledState,\r\n        entities: this.entities,\r\n        $implicit: rule\r\n      });\r\n    }\r\n    return this.entityContextCache.get(rule);\r\n  }\r\n\r\n  getSwitchGroupContext(): SwitchGroupContext {\r\n    return {\r\n      onChange: this.changeCondition.bind(this),\r\n      getDisabledState: this.getDisabledState,\r\n      $implicit: this.data\r\n    };\r\n  }\r\n\r\n  getArrowIconContext(): ArrowIconContext {\r\n    return {\r\n      getDisabledState: this.getDisabledState,\r\n      $implicit: this.data\r\n    };\r\n  }\r\n\r\n  getEmptyWarningContext(): EmptyWarningContext {\r\n    return {\r\n      getDisabledState: this.getDisabledState,\r\n      message: this.emptyMessage,\r\n      $implicit: this.data\r\n    };\r\n  }\r\n\r\n  getOperatorContext(rule: Rule): OperatorContext {\r\n    if (!this.operatorContextCache.has(rule)) {\r\n      this.operatorContextCache.set(rule, {\r\n        onChange: this.changeOperator.bind(this),\r\n        getDisabledState: this.getDisabledState,\r\n        operators: this.getOperators(rule.field),\r\n        $implicit: rule\r\n      });\r\n    }\r\n    return this.operatorContextCache.get(rule);\r\n  }\r\n\r\n  getInputContext(rule: Rule): InputContext {\r\n    if (!this.inputContextCache.has(rule)) {\r\n      this.inputContextCache.set(rule, {\r\n        onChange: this.changeInput.bind(this),\r\n        getDisabledState: this.getDisabledState,\r\n        options: this.getOptions(rule.field),\r\n        field: this.config.fields[rule.field],\r\n        $implicit: rule\r\n      });\r\n    }\r\n    return this.inputContextCache.get(rule);\r\n  }\r\n\r\n  private calculateFieldChangeValue(\r\n    currentField: Field,\r\n    nextField: Field,\r\n    currentValue: any\r\n  ): any {\r\n\r\n    if (this.config.calculateFieldChangeValue != null) {\r\n      return this.config.calculateFieldChangeValue(\r\n        currentField, nextField, currentValue);\r\n    }\r\n\r\n    const canKeepValue = () => {\r\n      if (currentField == null || nextField == null) {\r\n        return false;\r\n      }\r\n      return currentField.type === nextField.type\r\n        && this.defaultPersistValueTypes.indexOf(currentField.type) !== -1;\r\n    };\r\n\r\n    if (this.persistValueOnFieldChange && canKeepValue()) {\r\n      return currentValue;\r\n    }\r\n\r\n    if (nextField && nextField.defaultValue !== undefined) {\r\n      return this.getDefaultValue(nextField.defaultValue);\r\n    }\r\n\r\n    return undefined;\r\n  }\r\n\r\n  private checkEmptyRuleInRuleset(ruleset: RuleSet): boolean {\r\n    if (!ruleset || !ruleset.rules || ruleset.rules.length === 0) {\r\n      return true;\r\n    } else {\r\n      return ruleset.rules.some((item: RuleSet) => {\r\n        if (item.rules) {\r\n          return this.checkEmptyRuleInRuleset(item);\r\n        } else {\r\n          return false;\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  private validateRulesInRuleset(ruleset: RuleSet, errorStore: any[]) {\r\n    if (ruleset && ruleset.rules && ruleset.rules.length > 0) {\r\n      ruleset.rules.forEach((item) => {\r\n        if ((item as RuleSet).rules) {\r\n          return this.validateRulesInRuleset(item as RuleSet, errorStore);\r\n        } else if ((item as Rule).field) {\r\n          const field = this.config.fields[(item as Rule).field];\r\n          if (field && field.validator && field.validator.apply) {\r\n            const error = field.validator(item as Rule, ruleset);\r\n            if (error != null) {\r\n              errorStore.push(error);\r\n            }\r\n          }\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  private handleDataChange(): void {\r\n    this.changeDetectorRef.markForCheck();\r\n    if (this.onChangeCallback) {\r\n      this.onChangeCallback();\r\n    }\r\n    if (this.parentChangeCallback) {\r\n      this.parentChangeCallback();\r\n    }\r\n  }\r\n\r\n  private handleTouched(): void {\r\n    if (this.onTouchedCallback) {\r\n      this.onTouchedCallback();\r\n    }\r\n    if (this.parentTouchedCallback) {\r\n      this.parentTouchedCallback();\r\n    }\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule, } from '@angular/forms';\r\n\r\nimport { QueryBuilderComponent } from './query-builder/query-builder.component';\r\n\r\nimport { QueryArrowIconDirective } from './query-builder/query-arrow-icon.directive';\r\nimport { QueryFieldDirective } from './query-builder/query-field.directive';\r\nimport { QueryInputDirective } from './query-builder/query-input.directive';\r\nimport { QueryEntityDirective } from './query-builder/query-entity.directive';\r\nimport { QueryOperatorDirective } from './query-builder/query-operator.directive';\r\nimport { QueryButtonGroupDirective } from './query-builder/query-button-group.directive';\r\nimport { QuerySwitchGroupDirective } from './query-builder/query-switch-group.directive';\r\nimport { QueryRemoveButtonDirective } from './query-builder/query-remove-button.directive';\r\nimport { QueryEmptyWarningDirective } from './query-builder/query-empty-warning.directive';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule\r\n  ],\r\n  declarations: [\r\n    QueryBuilderComponent,\r\n    QueryInputDirective,\r\n    QueryOperatorDirective,\r\n    QueryFieldDirective,\r\n    QueryEntityDirective,\r\n    QueryButtonGroupDirective,\r\n    QuerySwitchGroupDirective,\r\n    QueryRemoveButtonDirective,\r\n    QueryEmptyWarningDirective,\r\n    QueryArrowIconDirective\r\n  ],\r\n  exports: [\r\n    QueryBuilderComponent,\r\n    QueryInputDirective,\r\n    QueryOperatorDirective,\r\n    QueryFieldDirective,\r\n    QueryEntityDirective,\r\n    QueryButtonGroupDirective,\r\n    QuerySwitchGroupDirective,\r\n    QueryRemoveButtonDirective,\r\n    QueryEmptyWarningDirective,\r\n    QueryArrowIconDirective\r\n  ]\r\n})\r\nexport class QueryBuilderModule { }\r\n"],"names":["Directive","Input","i0.ɵɵelement","i0.ɵɵproperty","i0.ɵɵelementContainer","i0.ɵɵelementContainerStart","i0.ɵɵtemplate","i0.ɵɵelementContainerEnd","i0.ɵɵadvance","i0.ɵɵelementStart","i0.ɵɵlistener","i0.ɵɵelementEnd","i0.ɵɵtext","i0.ɵɵtextInterpolate1","NG_VALUE_ACCESSOR","forwardRef","NG_VALIDATORS","Component","ViewChild","ContentChild","ContentChildren","CommonModule","FormsModule","NgModule"],"mappings":"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"}