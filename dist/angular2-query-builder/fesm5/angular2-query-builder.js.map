{"version":3,"file":"angular2-query-builder.js","sources":["ng://angular2-query-builder/lib/query-builder/query-operator.directive.ts","ng://angular2-query-builder/lib/query-builder/query-field.directive.ts","ng://angular2-query-builder/lib/query-builder/query-entity.directive.ts","ng://angular2-query-builder/lib/query-builder/query-switch-group.directive.ts","ng://angular2-query-builder/lib/query-builder/query-button-group.directive.ts","ng://angular2-query-builder/lib/query-builder/query-input.directive.ts","ng://angular2-query-builder/lib/query-builder/query-remove-button.directive.ts","ng://angular2-query-builder/lib/query-builder/query-empty-warning.directive.ts","ng://angular2-query-builder/lib/query-builder/query-arrow-icon.directive.ts","ng://angular2-query-builder/lib/query-builder/query-builder.component.html","ng://angular2-query-builder/lib/query-builder/query-builder.component.ts","ng://angular2-query-builder/lib/angular2-query-builder.module.ts","ng://angular2-query-builder/public-api.ts","ng://angular2-query-builder/angular2-query-builder.ts"],"sourcesContent":["import { Directive, TemplateRef } from '@angular/core';\r\n\r\n@Directive({selector: '[queryOperator]'})\r\nexport class QueryOperatorDirective {\r\n  constructor(public template: TemplateRef<any>) {}\r\n}\r\n","import { Directive, TemplateRef } from '@angular/core';\r\n\r\n@Directive({selector: '[queryField]'})\r\nexport class QueryFieldDirective {\r\n  constructor(public template: TemplateRef<any>) {}\r\n}\r\n","import { Directive, TemplateRef } from '@angular/core';\r\n\r\n@Directive({selector: '[queryEntity]'})\r\nexport class QueryEntityDirective {\r\n  constructor(public template: TemplateRef<any>) {}\r\n}\r\n","import { Directive, TemplateRef } from '@angular/core';\r\n\r\n@Directive({selector: '[querySwitchGroup]'})\r\nexport class QuerySwitchGroupDirective {\r\n  constructor(public template: TemplateRef<any>) {}\r\n}\r\n","import { Directive, TemplateRef } from '@angular/core';\r\n\r\n@Directive({selector: '[queryButtonGroup]'})\r\nexport class QueryButtonGroupDirective {\r\n  constructor(public template: TemplateRef<any>) {}\r\n}\r\n","import { Directive, Input, TemplateRef } from '@angular/core';\r\n\r\n@Directive({selector: '[queryInput]'})\r\nexport class QueryInputDirective {\r\n  /** Unique name for query input type. */\r\n  @Input()\r\n  get queryInputType(): string { return this._type; }\r\n  set queryInputType(value: string) {\r\n    // If the directive is set without a type (updated programatically), then this setter will\r\n    // trigger with an empty string and should not overwrite the programatically set value.\r\n    if (!value) { return; }\r\n    this._type = value;\r\n  }\r\n  private _type: string;\r\n\r\n  constructor(public template: TemplateRef<any>) {}\r\n}\r\n","import { Directive, TemplateRef } from '@angular/core';\r\n\r\n@Directive({selector: '[queryRemoveButton]'})\r\nexport class QueryRemoveButtonDirective {\r\n  constructor(public template: TemplateRef<any>) {}\r\n}\r\n","import { Directive, TemplateRef } from '@angular/core';\r\n\r\n@Directive({selector: '[queryEmptyWarning]'})\r\nexport class QueryEmptyWarningDirective {\r\n  constructor(public template: TemplateRef<any>) {}\r\n}\r\n","import { Directive, TemplateRef } from '@angular/core';\r\n\r\n@Directive({selector: '[queryArrowIcon]'})\r\nexport class QueryArrowIconDirective {\r\n  constructor(public template: TemplateRef<any>) {}\r\n}\r\n","<div [ngClass]=\"getClassNames('switchRow')\">\r\n  <ng-template #defaultArrowIcon>\r\n    <i [ngClass]=\"getClassNames('arrowIcon')\"></i>\r\n  </ng-template>\r\n\r\n  <a *ngIf=\"allowCollapse\" (click)=\"toggleCollapse()\" [ngClass]=\"getClassNames('arrowIconButton', data.collapsed ? 'collapsed' : null)\">\r\n    <ng-container *ngIf=\"getArrowIconTemplate() as template; else defaultArrowIcon\">\r\n      <ng-container *ngTemplateOutlet=\"template; context: getArrowIconContext()\"></ng-container>\r\n    </ng-container>\r\n  </a>\r\n\r\n  <ng-container *ngIf=\"getButtonGroupTemplate() as template; else defaultButtonGroup\">\r\n    <div [ngClass]=\"getClassNames('buttonGroup', 'rightAlign')\">\r\n      <ng-container *ngTemplateOutlet=\"template; context: getButtonGroupContext()\"></ng-container>\r\n    </div>\r\n  </ng-container>\r\n\r\n  <ng-template #defaultButtonGroup>\r\n    <div [ngClass]=\"getClassNames('buttonGroup', 'rightAlign')\">\r\n      <button type=\"button\" (click)=\"addRule()\" [ngClass]=\"getClassNames('button')\" [disabled]=disabled>\r\n        <i [ngClass]=\"getClassNames('addIcon')\"></i> Rule\r\n      </button>\r\n      <button type=\"button\" (click)=\"addRuleSet()\" [ngClass]=\"getClassNames('button')\" *ngIf=\"allowRuleset\" [disabled]=disabled>\r\n        <i [ngClass]=\"getClassNames('addIcon')\"></i> Ruleset\r\n      </button>\r\n      <ng-container *ngIf=\"!!parentValue && allowRuleset\">\r\n        <button type=\"button\" (click)=\"removeRuleSet()\" [ngClass]=\"getClassNames('button', 'removeButton')\" [disabled]=disabled>\r\n          <i [ngClass]=\"getClassNames('removeIcon')\"></i>\r\n        </button>\r\n      </ng-container>\r\n    </div>\r\n  </ng-template>\r\n\r\n  <ng-container *ngIf=\"getSwitchGroupTemplate() as template; else defaultSwitchGroup\">\r\n    <ng-container *ngTemplateOutlet=\"template; context: getSwitchGroupContext()\"></ng-container>\r\n  </ng-container>\r\n\r\n  <ng-template #defaultSwitchGroup>\r\n    <div [ngClass]=\"getClassNames('switchGroup', 'transition')\" *ngIf=\"data\">\r\n      <div [ngClass]=\"getClassNames('switchControl')\">\r\n        <input type=\"radio\" [ngClass]=\"getClassNames('switchRadio')\" [(ngModel)]=\"data.condition\" [disabled]=disabled\r\n          value=\"and\" #andOption />\r\n        <label (click)=\"changeCondition(andOption.value)\" [ngClass]=\"getClassNames('switchLabel')\">AND</label>\r\n      </div>\r\n      <div [ngClass]=\"getClassNames('switchControl')\">\r\n        <input type=\"radio\" [ngClass]=\"getClassNames('switchRadio')\" [(ngModel)]=\"data.condition\" [disabled]=disabled\r\n          value=\"or\" #orOption />\r\n        <label (click)=\"changeCondition(orOption.value)\" [ngClass]=\"getClassNames('switchLabel')\">OR</label>\r\n      </div>\r\n    </div>\r\n  </ng-template>\r\n</div>\r\n\r\n<div #treeContainer (transitionend)=\"transitionEnd($event)\" [ngClass]=\"getClassNames('treeContainer', data.collapsed ? 'collapsed' : null)\">\r\n  <ul [ngClass]=\"getClassNames('tree')\" *ngIf=\"data && data.rules\">\r\n    <ng-container *ngFor=\"let rule of data.rules;let i=index\">\r\n\r\n      <ng-container *ngIf=\"{ruleset: !!rule.rules, invalid: !config.allowEmptyRulesets && rule.rules && rule.rules.length === 0} as local\">\r\n        <li [ngClass]=\"getQueryItemClassName(local)\">\r\n          <ng-container *ngIf=\"!local.ruleset\">\r\n\r\n            <ng-container *ngIf=\"getRemoveButtonTemplate() as template; else defaultRemoveButton\">\r\n              <div [ngClass]=\"getClassNames('buttonGroup', 'rightAlign')\">\r\n                <ng-container *ngTemplateOutlet=\"template; context: getRemoveButtonContext(rule)\"></ng-container>\r\n              </div>\r\n            </ng-container>\r\n\r\n            <ng-template #defaultRemoveButton>\r\n              <div [ngClass]=\"getClassNames('removeButtonSize', 'rightAlign')\">\r\n                <button type=\"button\" [ngClass]=\"getClassNames('button', 'removeButton')\" (click)=\"removeRule(rule, data)\" [disabled]=disabled>\r\n                  <i [ngClass]=\"getClassNames('removeIcon')\"></i>\r\n                </button>\r\n              </div>\r\n            </ng-template>\r\n\r\n            <div *ngIf=\"entities?.length > 0\" class=\"q-inline-block-display\">\r\n              <ng-container *ngIf=\"getEntityTemplate() as template; else defaultEntity\">\r\n                <ng-container *ngTemplateOutlet=\"template; context: getEntityContext(rule)\"></ng-container>\r\n              </ng-container>\r\n            </div>\r\n\r\n            <ng-template #defaultEntity>\r\n              <div [ngClass]=\"getClassNames('entityControlSize')\">\r\n                <select [ngClass]=\"getClassNames('entityControl')\" [(ngModel)]=\"rule.entity\" (ngModelChange)=\"changeEntity($event, rule,i,data)\"\r\n                  [disabled]=\"disabled\">\r\n                  <option *ngFor=\"let entity of entities\" [ngValue]=\"entity.value\">\r\n                    {{entity.name}}\r\n                  </option>\r\n                </select>\r\n              </div>\r\n            </ng-template>\r\n\r\n            <ng-container *ngIf=\"getFieldTemplate() as template; else defaultField\">\r\n              <ng-container *ngTemplateOutlet=\"template; context: getFieldContext(rule)\"></ng-container>\r\n            </ng-container>\r\n\r\n            <ng-template #defaultField>\r\n              <div [ngClass]=\"getClassNames('fieldControlSize')\">\r\n                <select [ngClass]=\"getClassNames('fieldControl')\" [(ngModel)]=\"rule.field\" (ngModelChange)=\"changeField($event, rule)\"\r\n                  [disabled]=\"disabled\">\r\n                  <option *ngFor=\"let field of getFields(rule.entity)\" [ngValue]=\"field.value\">\r\n                    {{field.name}}\r\n                  </option>\r\n                </select>\r\n              </div>\r\n            </ng-template>\r\n\r\n            <ng-container *ngIf=\"getOperatorTemplate() as template; else defaultOperator\">\r\n              <ng-container *ngTemplateOutlet=\"template; context: getOperatorContext(rule)\"></ng-container>\r\n            </ng-container>\r\n\r\n            <ng-template #defaultOperator>\r\n              <div [ngClass]=\"getClassNames('operatorControlSize')\">\r\n                <select [ngClass]=\"getClassNames('operatorControl')\" [(ngModel)]=\"rule.operator\" (ngModelChange)=\"changeOperator(rule)\"\r\n                  [disabled]=\"disabled\">\r\n                  <option *ngFor=\"let operator of getOperators(rule.field)\" [ngValue]=\"operator\">\r\n                    {{operator}}\r\n                  </option>\r\n                </select>\r\n              </div>\r\n            </ng-template>\r\n\r\n            <ng-container *ngIf=\"findTemplateForRule(rule) as template; else defaultInput\">\r\n              <ng-container *ngTemplateOutlet=\"template; context: getInputContext(rule)\"></ng-container>\r\n            </ng-container>\r\n\r\n            <ng-template #defaultInput>\r\n              <div [ngClass]=\"getClassNames('inputControlSize')\" [ngSwitch]=\"getInputType(rule.field, rule.operator)\">\r\n                <input [ngClass]=\"getClassNames('inputControl')\" [(ngModel)]=\"rule.value\" (ngModelChange)=\"changeInput()\"\r\n                  [disabled]=\"disabled\" *ngSwitchCase=\"'string'\" type=\"text\">\r\n                <input [ngClass]=\"getClassNames('inputControl')\" [(ngModel)]=\"rule.value\" (ngModelChange)=\"changeInput()\"\r\n                  [disabled]=\"disabled\" *ngSwitchCase=\"'number'\" type=\"number\">\r\n                <input [ngClass]=\"getClassNames('inputControl')\" [(ngModel)]=\"rule.value\" (ngModelChange)=\"changeInput()\"\r\n                  [disabled]=\"disabled\" *ngSwitchCase=\"'date'\" type=\"date\">\r\n                <input [ngClass]=\"getClassNames('inputControl')\" [(ngModel)]=\"rule.value\" (ngModelChange)=\"changeInput()\"\r\n                  [disabled]=\"disabled\" *ngSwitchCase=\"'time'\" type=\"time\">\r\n                <select [ngClass]=\"getClassNames('inputControl')\" [(ngModel)]=\"rule.value\" (ngModelChange)=\"changeInput()\"\r\n                  [disabled]=\"disabled\" *ngSwitchCase=\"'category'\">\r\n                  <option *ngFor=\"let opt of getOptions(rule.field)\" [ngValue]=\"opt.value\">\r\n                    {{opt.name}}\r\n                  </option>\r\n                </select>\r\n                <ng-container *ngSwitchCase=\"'multiselect'\">\r\n                  <select [ngClass]=\"getClassNames('inputControl')\" [(ngModel)]=\"rule.value\" (ngModelChange)=\"changeInput()\"\r\n                    [disabled]=\"disabled\" multiple>\r\n                    <option *ngFor=\"let opt of getOptions(rule.field)\" [ngValue]=\"opt.value\">\r\n                      {{opt.name}}\r\n                    </option>\r\n                  </select>\r\n                </ng-container>\r\n                <input [ngClass]=\"getClassNames('inputControl')\" [(ngModel)]=\"rule.value\" (ngModelChange)=\"changeInput()\"\r\n                  [disabled]=\"disabled\" *ngSwitchCase=\"'boolean'\" type=\"checkbox\">\r\n              </div>\r\n            </ng-template>\r\n\r\n          </ng-container>\r\n          <query-builder *ngIf=\"local.ruleset\" [data]=\"rule\" [disabled]=\"disabled\" [parentTouchedCallback]=\"parentTouchedCallback || onTouchedCallback\"\r\n            [parentChangeCallback]=\"parentChangeCallback || onChangeCallback\" [parentInputTemplates]=\"parentInputTemplates || inputTemplates\"\r\n            [parentOperatorTemplate]=\"parentOperatorTemplate || operatorTemplate\" [parentFieldTemplate]=\"parentFieldTemplate || fieldTemplate\"\r\n            [parentEntityTemplate]=\"parentEntityTemplate || entityTemplate\" [parentSwitchGroupTemplate]=\"parentSwitchGroupTemplate || switchGroupTemplate\"\r\n            [parentButtonGroupTemplate]=\"parentButtonGroupTemplate || buttonGroupTemplate\" [parentRemoveButtonTemplate]=\"parentRemoveButtonTemplate || removeButtonTemplate\"\r\n            [parentEmptyWarningTemplate]=\"parentEmptyWarningTemplate || emptyWarningTemplate\" [parentArrowIconTemplate]=\"parentArrowIconTemplate || arrowIconTemplate\"\r\n            [parentValue]=\"data\" [classNames]=\"classNames\" [config]=\"config\" [allowRuleset]=\"allowRuleset\"\r\n            [allowCollapse]=\"allowCollapse\" [emptyMessage]=\"emptyMessage\" [operatorMap]=\"operatorMap\">\r\n          </query-builder>\r\n\r\n          <ng-container *ngIf=\"getEmptyWarningTemplate() as template; else defaultEmptyWarning\">\r\n            <ng-container *ngIf=\"local.invalid\">\r\n              <ng-container *ngTemplateOutlet=\"template; context: getEmptyWarningContext()\"></ng-container>\r\n            </ng-container>\r\n          </ng-container>\r\n\r\n          <ng-template #defaultEmptyWarning>\r\n            <p [ngClass]=\"getClassNames('emptyWarning')\" *ngIf=\"local.invalid\">\r\n              {{emptyMessage}}\r\n            </p>\r\n          </ng-template>\r\n        </li>\r\n      </ng-container>\r\n    </ng-container>\r\n  </ul>\r\n</div>","import {\r\n  AbstractControl,\r\n  ControlValueAccessor,\r\n  NG_VALUE_ACCESSOR,\r\n  NG_VALIDATORS,\r\n  ValidationErrors,\r\n  Validator\r\n} from '@angular/forms';\r\nimport { QueryOperatorDirective } from './query-operator.directive';\r\nimport { QueryFieldDirective } from './query-field.directive';\r\nimport { QueryEntityDirective } from './query-entity.directive';\r\nimport { QuerySwitchGroupDirective } from './query-switch-group.directive';\r\nimport { QueryButtonGroupDirective } from './query-button-group.directive';\r\nimport { QueryInputDirective } from './query-input.directive';\r\nimport { QueryRemoveButtonDirective } from './query-remove-button.directive';\r\nimport { QueryEmptyWarningDirective } from './query-empty-warning.directive';\r\nimport { QueryArrowIconDirective } from './query-arrow-icon.directive';\r\nimport {\r\n  ButtonGroupContext,\r\n  Entity,\r\n  Field,\r\n  SwitchGroupContext,\r\n  EntityContext,\r\n  FieldContext,\r\n  InputContext,\r\n  LocalRuleMeta,\r\n  OperatorContext,\r\n  Option,\r\n  QueryBuilderClassNames,\r\n  QueryBuilderConfig,\r\n  RemoveButtonContext,\r\n  ArrowIconContext,\r\n  Rule,\r\n  RuleSet,\r\n  EmptyWarningContext,\r\n} from './query-builder.interfaces';\r\nimport {\r\n  ChangeDetectorRef,\r\n  Component,\r\n  ContentChild,\r\n  ContentChildren,\r\n  forwardRef,\r\n  Input,\r\n  OnChanges,\r\n  OnInit,\r\n  QueryList,\r\n  SimpleChanges,\r\n  TemplateRef,\r\n  ViewChild,\r\n  ElementRef\r\n} from '@angular/core';\r\n\r\nexport const CONTROL_VALUE_ACCESSOR: any = {\r\n  provide: NG_VALUE_ACCESSOR,\r\n  useExisting: forwardRef(() => QueryBuilderComponent),\r\n  multi: true\r\n};\r\n\r\nexport const VALIDATOR: any = {\r\n  provide: NG_VALIDATORS,\r\n  useExisting: forwardRef(() => QueryBuilderComponent),\r\n  multi: true\r\n};\r\n\r\n@Component({\r\n  selector: 'query-builder',\r\n  templateUrl: './query-builder.component.html',\r\n  styleUrls: ['./query-builder.component.scss'],\r\n  providers: [CONTROL_VALUE_ACCESSOR, VALIDATOR]\r\n})\r\nexport class QueryBuilderComponent implements OnInit, OnChanges, ControlValueAccessor, Validator {\r\n  public fields: Field[];\r\n  public filterFields: Field[];\r\n  public entities: Entity[];\r\n  public defaultClassNames: QueryBuilderClassNames = {\r\n    arrowIconButton: 'q-arrow-icon-button',\r\n    arrowIcon: 'q-icon q-arrow-icon',\r\n    removeIcon: 'q-icon q-remove-icon',\r\n    addIcon: 'q-icon q-add-icon',\r\n    button: 'q-button',\r\n    buttonGroup: 'q-button-group',\r\n    removeButton: 'q-remove-button',\r\n    switchGroup: 'q-switch-group',\r\n    switchLabel: 'q-switch-label',\r\n    switchRadio: 'q-switch-radio',\r\n    rightAlign: 'q-right-align',\r\n    transition: 'q-transition',\r\n    collapsed: 'q-collapsed',\r\n    treeContainer: 'q-tree-container',\r\n    tree: 'q-tree',\r\n    row: 'q-row',\r\n    connector: 'q-connector',\r\n    rule: 'q-rule',\r\n    ruleSet: 'q-ruleset',\r\n    invalidRuleSet: 'q-invalid-ruleset',\r\n    emptyWarning: 'q-empty-warning',\r\n    fieldControl: 'q-field-control',\r\n    fieldControlSize: 'q-control-size',\r\n    entityControl: 'q-entity-control',\r\n    entityControlSize: 'q-control-size',\r\n    operatorControl: 'q-operator-control',\r\n    operatorControlSize: 'q-control-size',\r\n    inputControl: 'q-input-control',\r\n    inputControlSize: 'q-control-size'\r\n  };\r\n  public defaultOperatorMap: { [key: string]: string[] } = {\r\n    string: ['=', '!=', 'contains', 'like'],\r\n    number: ['=', '!=', '>', '>=', '<', '<='],\r\n    time: ['=', '!=', '>', '>=', '<', '<='],\r\n    date: ['=', '!=', '>', '>=', '<', '<='],\r\n    category: ['=', '!=', 'in', 'not in'],\r\n    boolean: ['=']\r\n  };\r\n  @Input() disabled: boolean;\r\n  @Input() data: RuleSet = { condition: 'and', rules: [] };\r\n\r\n  // For ControlValueAccessor interface\r\n  public onChangeCallback: () => void;\r\n  public onTouchedCallback: () => any;\r\n\r\n  @Input() allowRuleset: boolean = true;\r\n  @Input() allowCollapse: boolean = false;\r\n  @Input() emptyMessage: string = 'A ruleset cannot be empty. Please add a rule or remove it all together.';\r\n  @Input() classNames: QueryBuilderClassNames;\r\n  @Input() operatorMap: { [key: string]: string[] };\r\n  @Input() parentValue: RuleSet;\r\n  @Input() config: QueryBuilderConfig = { fields: {} };\r\n  @Input() parentArrowIconTemplate: QueryArrowIconDirective;\r\n  @Input() parentInputTemplates: QueryList<QueryInputDirective>;\r\n  @Input() parentOperatorTemplate: QueryOperatorDirective;\r\n  @Input() parentFieldTemplate: QueryFieldDirective;\r\n  @Input() parentEntityTemplate: QueryEntityDirective;\r\n  @Input() parentSwitchGroupTemplate: QuerySwitchGroupDirective;\r\n  @Input() parentButtonGroupTemplate: QueryButtonGroupDirective;\r\n  @Input() parentRemoveButtonTemplate: QueryRemoveButtonDirective;\r\n  @Input() parentEmptyWarningTemplate: QueryEmptyWarningDirective;\r\n  @Input() parentChangeCallback: () => void;\r\n  @Input() parentTouchedCallback: () => void;\r\n  @Input() persistValueOnFieldChange: boolean = false;\r\n\r\n  @ViewChild('treeContainer', {static: true}) treeContainer: ElementRef;\r\n\r\n  @ContentChild(QueryButtonGroupDirective) buttonGroupTemplate: QueryButtonGroupDirective;\r\n  @ContentChild(QuerySwitchGroupDirective) switchGroupTemplate: QuerySwitchGroupDirective;\r\n  @ContentChild(QueryFieldDirective) fieldTemplate: QueryFieldDirective;\r\n  @ContentChild(QueryEntityDirective) entityTemplate: QueryEntityDirective;\r\n  @ContentChild(QueryOperatorDirective) operatorTemplate: QueryOperatorDirective;\r\n  @ContentChild(QueryRemoveButtonDirective) removeButtonTemplate: QueryRemoveButtonDirective;\r\n  @ContentChild(QueryEmptyWarningDirective) emptyWarningTemplate: QueryEmptyWarningDirective;\r\n  @ContentChildren(QueryInputDirective) inputTemplates: QueryList<QueryInputDirective>;\r\n  @ContentChild(QueryArrowIconDirective) arrowIconTemplate: QueryArrowIconDirective;\r\n\r\n  private defaultTemplateTypes: string[] = [\r\n    'string', 'number', 'time', 'date', 'category', 'boolean', 'multiselect'];\r\n  private defaultPersistValueTypes: string[] = [\r\n    'string', 'number', 'time', 'date', 'boolean'];\r\n  private defaultEmptyList: any[] = [];\r\n  private operatorsCache: { [key: string]: string[] };\r\n  private inputContextCache = new Map<Rule, InputContext>();\r\n  private operatorContextCache = new Map<Rule, OperatorContext>();\r\n  private fieldContextCache = new Map<Rule, FieldContext>();\r\n  private entityContextCache = new Map<Rule, EntityContext>();\r\n  private removeButtonContextCache = new Map<Rule, RemoveButtonContext>();\r\n  private buttonGroupContext: ButtonGroupContext;\r\n\r\n  constructor(private changeDetectorRef: ChangeDetectorRef) { }\r\n\r\n  // ----------OnInit Implementation----------\r\n\r\n  ngOnInit() { }\r\n\r\n  // ----------OnChanges Implementation----------\r\n\r\n  ngOnChanges(changes: SimpleChanges) {\r\n    const config = this.config;\r\n    const type = typeof config;\r\n    if (type === 'object') {\r\n      this.fields = Object.keys(config.fields).map((value) => {\r\n        const field = config.fields[value];\r\n        field.value = field.value || value;\r\n        return field;\r\n      });\r\n      if (config.entities) {\r\n        this.entities = Object.keys(config.entities).map((value) => {\r\n          const entity = config.entities[value];\r\n          entity.value = entity.value || value;\r\n          return entity;\r\n        });\r\n      } else {\r\n        this.entities = null;\r\n      }\r\n      this.operatorsCache = {};\r\n    } else {\r\n      throw new Error(`Expected 'config' must be a valid object, got ${type} instead.`);\r\n    }\r\n  }\r\n\r\n  // ----------Validator Implementation----------\r\n\r\n  validate(control: AbstractControl): ValidationErrors | null {\r\n    const errors: { [key: string]: any } = {};\r\n    const ruleErrorStore = [];\r\n    let hasErrors = false;\r\n\r\n    if (!this.config.allowEmptyRulesets && this.checkEmptyRuleInRuleset(this.data)) {\r\n      errors.empty = 'Empty rulesets are not allowed.';\r\n      hasErrors = true;\r\n    }\r\n\r\n    this.validateRulesInRuleset(this.data, ruleErrorStore);\r\n\r\n    if (ruleErrorStore.length) {\r\n      errors.rules = ruleErrorStore;\r\n      hasErrors = true;\r\n    }\r\n    return hasErrors ? errors : null;\r\n  }\r\n\r\n  // ----------ControlValueAccessor Implementation----------\r\n\r\n  @Input()\r\n  get value(): RuleSet {\r\n    return this.data;\r\n  }\r\n  set value(value: RuleSet) {\r\n    // When component is initialized without a formControl, null is passed to value\r\n    this.data = value || { condition: 'and', rules: [] };\r\n    this.handleDataChange();\r\n  }\r\n\r\n  writeValue(obj: any): void {\r\n    this.value = obj;\r\n  }\r\n  registerOnChange(fn: any): void {\r\n    this.onChangeCallback = () => fn(this.data);\r\n  }\r\n  registerOnTouched(fn: any): void {\r\n    this.onTouchedCallback = () => fn(this.data);\r\n  }\r\n  setDisabledState(isDisabled: boolean): void {\r\n    this.disabled = isDisabled;\r\n    this.changeDetectorRef.detectChanges();\r\n  }\r\n\r\n  // ----------END----------\r\n\r\n  getDisabledState = (): boolean => {\r\n    return this.disabled;\r\n  }\r\n\r\n  findTemplateForRule(rule: Rule): TemplateRef<any> {\r\n    const type = this.getInputType(rule.field, rule.operator);\r\n    if (type) {\r\n      const queryInput = this.findQueryInput(type);\r\n      if (queryInput) {\r\n        return queryInput.template;\r\n      } else {\r\n        if (this.defaultTemplateTypes.indexOf(type) === -1) {\r\n          console.warn(`Could not find template for field with type: ${type}`);\r\n        }\r\n        return null;\r\n      }\r\n    }\r\n  }\r\n\r\n  findQueryInput(type: string): QueryInputDirective {\r\n    const templates = this.parentInputTemplates || this.inputTemplates;\r\n    return templates.find((item) => item.queryInputType === type);\r\n  }\r\n\r\n  getOperators(field: string): string[] {\r\n    if (this.operatorsCache[field]) {\r\n      return this.operatorsCache[field];\r\n    }\r\n    let operators = this.defaultEmptyList;\r\n    const fieldObject = this.config.fields[field];\r\n\r\n    if (this.config.getOperators) {\r\n      return this.config.getOperators(field, fieldObject);\r\n    }\r\n\r\n    const type = fieldObject.type;\r\n\r\n    if (fieldObject && fieldObject.operators) {\r\n      operators = fieldObject.operators;\r\n    } else if (type) {\r\n      operators = (this.operatorMap && this.operatorMap[type]) || this.defaultOperatorMap[type] || this.defaultEmptyList;\r\n      if (operators.length === 0) {\r\n        console.warn(\r\n          `No operators found for field '${field}' with type ${fieldObject.type}. ` +\r\n          `Please define an 'operators' property on the field or use the 'operatorMap' binding to fix this.`);\r\n      }\r\n      if (fieldObject.nullable) {\r\n        operators = operators.concat(['is null', 'is not null']);\r\n      }\r\n    } else {\r\n      console.warn(`No 'type' property found on field: '${field}'`);\r\n    }\r\n\r\n    // Cache reference to array object, so it won't be computed next time and trigger a rerender.\r\n    this.operatorsCache[field] = operators;\r\n    return operators;\r\n  }\r\n\r\n  getFields(entity: string): Field[] {\r\n    if (this.entities && entity) {\r\n      return this.fields.filter((field) => {\r\n        return field && field.entity === entity;\r\n      });\r\n    } else {\r\n      return this.fields;\r\n    }\r\n  }\r\n\r\n  getInputType(field: string, operator: string): string {\r\n    if (this.config.getInputType) {\r\n      return this.config.getInputType(field, operator);\r\n    }\r\n\r\n    if (!this.config.fields[field]) {\r\n      throw new Error(`No configuration for field '${field}' could be found! Please add it to config.fields.`);\r\n    }\r\n\r\n    const type = this.config.fields[field].type;\r\n    switch (operator) {\r\n      case 'is null':\r\n      case 'is not null':\r\n        return null;  // No displayed component\r\n      case 'in':\r\n      case 'not in':\r\n        return type === 'category' || type === 'boolean' ? 'multiselect' : type;\r\n      default:\r\n        return type;\r\n    }\r\n  }\r\n\r\n  getOptions(field: string): Option[] {\r\n    if (this.config.getOptions) {\r\n      return this.config.getOptions(field);\r\n    }\r\n    return this.config.fields[field].options || this.defaultEmptyList;\r\n  }\r\n\r\n  getClassNames(...args): string {\r\n    const clsLookup = this.classNames ? this.classNames : this.defaultClassNames;\r\n    const classNames = args.map((id) => clsLookup[id] || this.defaultClassNames[id]).filter((c) => !!c);\r\n    return classNames.length ? classNames.join(' ') : null;\r\n  }\r\n\r\n  getDefaultField(entity: Entity): Field {\r\n    if (!entity) {\r\n      return null;\r\n    } else if (entity.defaultField !== undefined) {\r\n      return this.getDefaultValue(entity.defaultField);\r\n    } else {\r\n      const entityFields = this.fields.filter((field) => {\r\n        return field && field.entity === entity.value;\r\n      });\r\n      if (entityFields && entityFields.length) {\r\n        return entityFields[0];\r\n      } else {\r\n        console.warn(`No fields found for entity '${entity.name}'. ` +\r\n          `A 'defaultOperator' is also not specified on the field config. Operator value will default to null.`);\r\n        return null;\r\n      }\r\n    }\r\n  }\r\n\r\n  getDefaultOperator(field: Field): string {\r\n    if (field && field.defaultOperator !== undefined) {\r\n      return this.getDefaultValue(field.defaultOperator);\r\n    } else {\r\n      const operators = this.getOperators(field.value);\r\n      if (operators && operators.length) {\r\n        return operators[0];\r\n      } else {\r\n        console.warn(`No operators found for field '${field.value}'. ` +\r\n          `A 'defaultOperator' is also not specified on the field config. Operator value will default to null.`);\r\n        return null;\r\n      }\r\n    }\r\n  }\r\n\r\n  addRule(parent?: RuleSet): void {\r\n    if (this.disabled) {\r\n      return;\r\n    }\r\n\r\n    parent = parent || this.data;\r\n    if (this.config.addRule) {\r\n      this.config.addRule(parent);\r\n    } else {\r\n      const field = this.fields[0];\r\n      parent.rules = parent.rules.concat([{\r\n        field: field.value,\r\n        operator: this.getDefaultOperator(field),\r\n        value: this.getDefaultValue(field.defaultValue),\r\n        entity: field.entity\r\n      }]);\r\n    }\r\n\r\n    this.handleTouched();\r\n    this.handleDataChange();\r\n  }\r\n\r\n  removeRule(rule: Rule, parent?: RuleSet): void {\r\n    if (this.disabled) {\r\n      return;\r\n    }\r\n\r\n    parent = parent || this.data;\r\n    if (this.config.removeRule) {\r\n      this.config.removeRule(rule, parent);\r\n    } else {\r\n      parent.rules = parent.rules.filter((r) => r !== rule);\r\n    }\r\n    this.inputContextCache.delete(rule);\r\n    this.operatorContextCache.delete(rule);\r\n    this.fieldContextCache.delete(rule);\r\n    this.entityContextCache.delete(rule);\r\n    this.removeButtonContextCache.delete(rule);\r\n\r\n    this.handleTouched();\r\n    this.handleDataChange();\r\n  }\r\n\r\n  addRuleSet(parent?: RuleSet): void {\r\n    if (this.disabled) {\r\n      return;\r\n    }\r\n\r\n    parent = parent || this.data;\r\n    if (this.config.addRuleSet) {\r\n      this.config.addRuleSet(parent);\r\n    } else {\r\n      parent.rules = parent.rules.concat([{ condition: 'and', rules: [] }]);\r\n    }\r\n\r\n    this.handleTouched();\r\n    this.handleDataChange();\r\n  }\r\n\r\n  removeRuleSet(ruleset?: RuleSet, parent?: RuleSet): void {\r\n    if (this.disabled) {\r\n      return;\r\n    }\r\n\r\n    ruleset = ruleset || this.data;\r\n    parent = parent || this.parentValue;\r\n    if (this.config.removeRuleSet) {\r\n      this.config.removeRuleSet(ruleset, parent);\r\n    } else {\r\n      parent.rules = parent.rules.filter((r) => r !== ruleset);\r\n    }\r\n\r\n    this.handleTouched();\r\n    this.handleDataChange();\r\n  }\r\n\r\n  transitionEnd(e: Event): void {\r\n    this.treeContainer.nativeElement.style.maxHeight = null;\r\n  }\r\n\r\n  toggleCollapse(): void {\r\n    this.computedTreeContainerHeight();\r\n    setTimeout(() => {\r\n      this.data.collapsed = !this.data.collapsed;\r\n    }, 100);\r\n  }\r\n\r\n  computedTreeContainerHeight(): void {\r\n    const nativeElement: HTMLElement = this.treeContainer.nativeElement;\r\n    if (nativeElement && nativeElement.firstElementChild) {\r\n      nativeElement.style.maxHeight = (nativeElement.firstElementChild.clientHeight + 8) + 'px';\r\n    }\r\n  }\r\n\r\n  changeCondition(value: string): void {\r\n    if (this.disabled) {\r\n      return;\r\n    }\r\n\r\n    this.data.condition = value;\r\n    this.handleTouched();\r\n    this.handleDataChange();\r\n  }\r\n\r\n  changeOperator(rule: Rule): void {\r\n    if (this.disabled) {\r\n      return;\r\n    }\r\n\r\n    if (this.config.coerceValueForOperator) {\r\n      rule.value = this.config.coerceValueForOperator(rule.operator, rule.value, rule);\r\n    } else {\r\n      rule.value = this.coerceValueForOperator(rule.operator, rule.value, rule);\r\n    }\r\n\r\n    this.handleTouched();\r\n    this.handleDataChange();\r\n  }\r\n\r\n  coerceValueForOperator(operator: string, value: any, rule: Rule): any {\r\n    const inputType: string = this.getInputType(rule.field, operator);\r\n    if (inputType === 'multiselect' && !Array.isArray(value)) {\r\n      return [value];\r\n    }\r\n    return value;\r\n  }\r\n\r\n  changeInput(): void {\r\n    if (this.disabled) {\r\n      return;\r\n    }\r\n\r\n    this.handleTouched();\r\n    this.handleDataChange();\r\n  }\r\n\r\n  changeField(fieldValue: string, rule: Rule): void {\r\n    if (this.disabled) {\r\n      return;\r\n    }\r\n\r\n    const inputContext = this.inputContextCache.get(rule);\r\n    const currentField = inputContext && inputContext.field;\r\n\r\n    const nextField: Field = this.config.fields[fieldValue];\r\n\r\n    const nextValue = this.calculateFieldChangeValue(\r\n      currentField, nextField, rule.value);\r\n\r\n    if (nextValue !== undefined) {\r\n      rule.value = nextValue;\r\n    } else {\r\n      delete rule.value;\r\n    }\r\n\r\n    rule.operator = this.getDefaultOperator(nextField);\r\n\r\n    // Create new context objects so templates will automatically update\r\n    this.inputContextCache.delete(rule);\r\n    this.operatorContextCache.delete(rule);\r\n    this.fieldContextCache.delete(rule);\r\n    this.entityContextCache.delete(rule);\r\n    this.getInputContext(rule);\r\n    this.getFieldContext(rule);\r\n    this.getOperatorContext(rule);\r\n    this.getEntityContext(rule);\r\n\r\n    this.handleTouched();\r\n    this.handleDataChange();\r\n  }\r\n\r\n  changeEntity(entityValue: string, rule: Rule, index: number, data: RuleSet): void {\r\n    if (this.disabled) {\r\n      return;\r\n    }\r\n    let i = index;\r\n    let rs = data;\r\n    const entity: Entity = this.entities.find((e) => e.value === entityValue);\r\n    const defaultField: Field = this.getDefaultField(entity);\r\n    if (!rs) {\r\n      rs = this.data;\r\n      i = rs.rules.findIndex((x) => x === rule);\r\n    }\r\n    rule.field = defaultField.value;\r\n    rs.rules[i] = rule;\r\n    if (defaultField) {\r\n      this.changeField(defaultField.value, rule);\r\n    } else {\r\n      this.handleTouched();\r\n      this.handleDataChange();\r\n    }\r\n  }\r\n\r\n  getDefaultValue(defaultValue: any): any {\r\n    switch (typeof defaultValue) {\r\n      case 'function':\r\n        return defaultValue();\r\n      default:\r\n        return defaultValue;\r\n    }\r\n  }\r\n\r\n  getOperatorTemplate(): TemplateRef<any> {\r\n    const t = this.parentOperatorTemplate || this.operatorTemplate;\r\n    return t ? t.template : null;\r\n  }\r\n\r\n  getFieldTemplate(): TemplateRef<any> {\r\n    const t = this.parentFieldTemplate || this.fieldTemplate;\r\n    return t ? t.template : null;\r\n  }\r\n\r\n  getEntityTemplate(): TemplateRef<any> {\r\n    const t = this.parentEntityTemplate || this.entityTemplate;\r\n    return t ? t.template : null;\r\n  }\r\n\r\n  getArrowIconTemplate(): TemplateRef<any> {\r\n    const t = this.parentArrowIconTemplate || this.arrowIconTemplate;\r\n    return t ? t.template : null;\r\n  }\r\n\r\n  getButtonGroupTemplate(): TemplateRef<any> {\r\n    const t = this.parentButtonGroupTemplate || this.buttonGroupTemplate;\r\n    return t ? t.template : null;\r\n  }\r\n\r\n  getSwitchGroupTemplate(): TemplateRef<any> {\r\n    const t = this.parentSwitchGroupTemplate || this.switchGroupTemplate;\r\n    return t ? t.template : null;\r\n  }\r\n\r\n  getRemoveButtonTemplate(): TemplateRef<any> {\r\n    const t = this.parentRemoveButtonTemplate || this.removeButtonTemplate;\r\n    return t ? t.template : null;\r\n  }\r\n\r\n  getEmptyWarningTemplate(): TemplateRef<any> {\r\n    const t = this.parentEmptyWarningTemplate || this.emptyWarningTemplate;\r\n    return t ? t.template : null;\r\n  }\r\n\r\n  getQueryItemClassName(local: LocalRuleMeta): string {\r\n    let cls = this.getClassNames('row', 'connector', 'transition');\r\n    cls += ' ' + this.getClassNames(local.ruleset ? 'ruleSet' : 'rule');\r\n    if (local.invalid) {\r\n      cls += ' ' + this.getClassNames('invalidRuleSet');\r\n    }\r\n    return cls;\r\n  }\r\n\r\n  getButtonGroupContext(): ButtonGroupContext {\r\n    if (!this.buttonGroupContext) {\r\n      this.buttonGroupContext = {\r\n        addRule: this.addRule.bind(this),\r\n        addRuleSet: this.allowRuleset && this.addRuleSet.bind(this),\r\n        removeRuleSet: this.allowRuleset && this.parentValue && this.removeRuleSet.bind(this),\r\n        getDisabledState: this.getDisabledState,\r\n        $implicit: this.data\r\n      };\r\n    }\r\n    return this.buttonGroupContext;\r\n  }\r\n\r\n  getRemoveButtonContext(rule: Rule): RemoveButtonContext {\r\n    if (!this.removeButtonContextCache.has(rule)) {\r\n      this.removeButtonContextCache.set(rule, {\r\n        removeRule: this.removeRule.bind(this),\r\n        getDisabledState: this.getDisabledState,\r\n        $implicit: rule\r\n      });\r\n    }\r\n    return this.removeButtonContextCache.get(rule);\r\n  }\r\n\r\n  getFieldContext(rule: Rule): FieldContext {\r\n    if (!this.fieldContextCache.has(rule)) {\r\n      this.fieldContextCache.set(rule, {\r\n        onChange: this.changeField.bind(this),\r\n        getFields: this.getFields.bind(this),\r\n        getDisabledState: this.getDisabledState,\r\n        fields: this.fields,\r\n        $implicit: rule\r\n      });\r\n    }\r\n    return this.fieldContextCache.get(rule);\r\n  }\r\n\r\n  getEntityContext(rule: Rule): EntityContext {\r\n    if (!this.entityContextCache.has(rule)) {\r\n      this.entityContextCache.set(rule, {\r\n        onChange: this.changeEntity.bind(this),\r\n        getDisabledState: this.getDisabledState,\r\n        entities: this.entities,\r\n        $implicit: rule\r\n      });\r\n    }\r\n    return this.entityContextCache.get(rule);\r\n  }\r\n\r\n  getSwitchGroupContext(): SwitchGroupContext {\r\n    return {\r\n      onChange: this.changeCondition.bind(this),\r\n      getDisabledState: this.getDisabledState,\r\n      $implicit: this.data\r\n    };\r\n  }\r\n\r\n  getArrowIconContext(): ArrowIconContext {\r\n    return {\r\n      getDisabledState: this.getDisabledState,\r\n      $implicit: this.data\r\n    };\r\n  }\r\n\r\n  getEmptyWarningContext(): EmptyWarningContext {\r\n    return {\r\n      getDisabledState: this.getDisabledState,\r\n      message: this.emptyMessage,\r\n      $implicit: this.data\r\n    };\r\n  }\r\n\r\n  getOperatorContext(rule: Rule): OperatorContext {\r\n    if (!this.operatorContextCache.has(rule)) {\r\n      this.operatorContextCache.set(rule, {\r\n        onChange: this.changeOperator.bind(this),\r\n        getDisabledState: this.getDisabledState,\r\n        operators: this.getOperators(rule.field),\r\n        $implicit: rule\r\n      });\r\n    }\r\n    return this.operatorContextCache.get(rule);\r\n  }\r\n\r\n  getInputContext(rule: Rule): InputContext {\r\n    if (!this.inputContextCache.has(rule)) {\r\n      this.inputContextCache.set(rule, {\r\n        onChange: this.changeInput.bind(this),\r\n        getDisabledState: this.getDisabledState,\r\n        options: this.getOptions(rule.field),\r\n        field: this.config.fields[rule.field],\r\n        $implicit: rule\r\n      });\r\n    }\r\n    return this.inputContextCache.get(rule);\r\n  }\r\n\r\n  private calculateFieldChangeValue(\r\n    currentField: Field,\r\n    nextField: Field,\r\n    currentValue: any\r\n  ): any {\r\n\r\n    if (this.config.calculateFieldChangeValue != null) {\r\n      return this.config.calculateFieldChangeValue(\r\n        currentField, nextField, currentValue);\r\n    }\r\n\r\n    const canKeepValue = () => {\r\n      if (currentField == null || nextField == null) {\r\n        return false;\r\n      }\r\n      return currentField.type === nextField.type\r\n        && this.defaultPersistValueTypes.indexOf(currentField.type) !== -1;\r\n    };\r\n\r\n    if (this.persistValueOnFieldChange && canKeepValue()) {\r\n      return currentValue;\r\n    }\r\n\r\n    if (nextField && nextField.defaultValue !== undefined) {\r\n      return this.getDefaultValue(nextField.defaultValue);\r\n    }\r\n\r\n    return undefined;\r\n  }\r\n\r\n  private checkEmptyRuleInRuleset(ruleset: RuleSet): boolean {\r\n    if (!ruleset || !ruleset.rules || ruleset.rules.length === 0) {\r\n      return true;\r\n    } else {\r\n      return ruleset.rules.some((item: RuleSet) => {\r\n        if (item.rules) {\r\n          return this.checkEmptyRuleInRuleset(item);\r\n        } else {\r\n          return false;\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  private validateRulesInRuleset(ruleset: RuleSet, errorStore: any[]) {\r\n    if (ruleset && ruleset.rules && ruleset.rules.length > 0) {\r\n      ruleset.rules.forEach((item) => {\r\n        if ((item as RuleSet).rules) {\r\n          return this.validateRulesInRuleset(item as RuleSet, errorStore);\r\n        } else if ((item as Rule).field) {\r\n          const field = this.config.fields[(item as Rule).field];\r\n          if (field && field.validator && field.validator.apply) {\r\n            const error = field.validator(item as Rule, ruleset);\r\n            if (error != null) {\r\n              errorStore.push(error);\r\n            }\r\n          }\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  private handleDataChange(): void {\r\n    this.changeDetectorRef.markForCheck();\r\n    if (this.onChangeCallback) {\r\n      this.onChangeCallback();\r\n    }\r\n    if (this.parentChangeCallback) {\r\n      this.parentChangeCallback();\r\n    }\r\n  }\r\n\r\n  private handleTouched(): void {\r\n    if (this.onTouchedCallback) {\r\n      this.onTouchedCallback();\r\n    }\r\n    if (this.parentTouchedCallback) {\r\n      this.parentTouchedCallback();\r\n    }\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule, } from '@angular/forms';\r\n\r\nimport { QueryBuilderComponent } from './query-builder/query-builder.component';\r\n\r\nimport { QueryArrowIconDirective } from './query-builder/query-arrow-icon.directive';\r\nimport { QueryFieldDirective } from './query-builder/query-field.directive';\r\nimport { QueryInputDirective } from './query-builder/query-input.directive';\r\nimport { QueryEntityDirective } from './query-builder/query-entity.directive';\r\nimport { QueryOperatorDirective } from './query-builder/query-operator.directive';\r\nimport { QueryButtonGroupDirective } from './query-builder/query-button-group.directive';\r\nimport { QuerySwitchGroupDirective } from './query-builder/query-switch-group.directive';\r\nimport { QueryRemoveButtonDirective } from './query-builder/query-remove-button.directive';\r\nimport { QueryEmptyWarningDirective } from './query-builder/query-empty-warning.directive';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule\r\n  ],\r\n  declarations: [\r\n    QueryBuilderComponent,\r\n    QueryInputDirective,\r\n    QueryOperatorDirective,\r\n    QueryFieldDirective,\r\n    QueryEntityDirective,\r\n    QueryButtonGroupDirective,\r\n    QuerySwitchGroupDirective,\r\n    QueryRemoveButtonDirective,\r\n    QueryEmptyWarningDirective,\r\n    QueryArrowIconDirective\r\n  ],\r\n  exports: [\r\n    QueryBuilderComponent,\r\n    QueryInputDirective,\r\n    QueryOperatorDirective,\r\n    QueryFieldDirective,\r\n    QueryEntityDirective,\r\n    QueryButtonGroupDirective,\r\n    QuerySwitchGroupDirective,\r\n    QueryRemoveButtonDirective,\r\n    QueryEmptyWarningDirective,\r\n    QueryArrowIconDirective\r\n  ]\r\n})\r\nexport class QueryBuilderModule { }\r\n","/*\r\n * Public API Surface of angular2-query-builder\r\n */\r\n\r\nexport * from './lib/query-builder/query-builder.interfaces';\r\n\r\nexport * from './lib/query-builder/query-builder.component';\r\n\r\nexport * from './lib/query-builder/query-button-group.directive';\r\nexport * from './lib/query-builder/query-entity.directive';\r\nexport * from './lib/query-builder/query-field.directive';\r\nexport * from './lib/query-builder/query-input.directive';\r\nexport * from './lib/query-builder/query-operator.directive';\r\nexport * from './lib/query-builder/query-switch-group.directive';\r\nexport * from './lib/query-builder/query-remove-button.directive';\r\nexport * from './lib/query-builder/query-empty-warning.directive';\r\nexport * from './lib/query-builder/query-arrow-icon.directive';\r\n\r\nexport * from './lib/angular2-query-builder.module';\r\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":["i0.ɵɵelement","i0.ɵɵproperty","i0.ɵɵelementContainer","i0.ɵɵelementContainerStart","i0.ɵɵtemplate","i0.ɵɵelementContainerEnd","i0.ɵɵadvance","i0.ɵɵelementStart","i0.ɵɵlistener","i0.ɵɵelementEnd","i0.ɵɵtext","i0.ɵɵtextInterpolate1"],"mappings":"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"}